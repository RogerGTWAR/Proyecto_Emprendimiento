Create database hackathonDB
CREATE TABLE users (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email VARCHAR(255) UNIQUE NOT NULL,
	password VARCHAR(255) NULL,
	is_owner BOOLEAN DEFAULT FALSE,
	google_oauth BOOLEAN DEFAULT FALSE,
	is_verified BOOLEAN DEFAULT FALSE,
	deleted_at TIMESTAMP NULL
);


CREATE TABLE companies (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	type VARCHAR(255) NOT NULL,
	user_id INT NOT NULL UNIQUE REFERENCES users(id),
	deleted_at TIMESTAMP NULL
);
//Se necesitan registros
CREATE TABLE departments (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	description TEXT NULL,
	company_id INT NOT NULL REFERENCES companies(id),
	deleted_at TIMESTAMP NULL
);

CREATE TABLE workers (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	firstname VARCHAR(255) NOT NULL,
	lastname VARCHAR(255) NOT NULL,
	hourly_fee DECIMAL NOT NULL CHECK (hourly_fee > 0),
	department_id INT NOT NULL REFERENCES departments(id),
	deleted_at TIMESTAMP NULL
);

CREATE TABLE services (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	cost DECIMAL NOT NULL CHECK (cost > 0),
	deleted_at TIMESTAMP NULL
);
//Se necesitan registros
CREATE TABLE material_units (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	unit_name VARCHAR(20) NOT NULL,
	deleted_at TIMESTAMP NULL
);

CREATE TABLE materials (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    waste_percentage DECIMAL NOT NULL,
    unit_cost DECIMAL NOT NULL CHECK (unit_cost > 0),
    material_img VARCHAR(255),
    company_id INT NOT NULL REFERENCES companies(id),
    material_unit_id INT NOT NULL REFERENCES material_units(id),
    deleted_at TIMESTAMP NULL,
	quantity INT NOT NULL DEFAULT 0,   
    measurements TEXT,                  
    size TEXT, 
	type VARCHAR(100)   
);


CREATE TABLE products (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    estimated_time INT NOT NULL CHECK (estimated_time > 0),
    description TEXT,
    profit_margin DECIMAL NOT NULL CHECK (profit_margin > 0),
    product_img VARCHAR(255),
    company_id INT NOT NULL REFERENCES companies(id),
	total_cost NUMERIC(12,2) NOT NULL DEFAULT 0,
    deleted_at TIMESTAMP NULL

);


CREATE TABLE product_material (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INT NOT NULL REFERENCES products(id),
    material_id INT NOT NULL REFERENCES materials(id),
    quantity SMALLINT NOT NULL CHECK (quantity > 0),
    cost NUMERIC(12,2) NOT NULL DEFAULT 0,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE tags (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	deleted_at TIMESTAMP NULL
);

CREATE TABLE material_tag (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	material_id INT NOT NULL REFERENCES materials(id),
	tag_id INT NOT NULL REFERENCES tags(id),
	deleted_at TIMESTAMP NULL
); 

CREATE TABLE product_tag (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	product_id INT NOT NULL REFERENCES products(id),
	tag_id INT NOT NULL REFERENCES tags(id),
	deleted_at TIMESTAMP NULL
);

CREATE TYPE PICTURABLE_ITEMS AS ENUM ('product', 'material');

CREATE TABLE processes (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	quantity INT NOT NULL CHECK(quantity > 0),
	product_id INT NOT NULL REFERENCES products(id),
	company_id INT NOT NULL REFERENCES companies(id),
	duration_total_minutes INT NOT NULL DEFAULT 0,          
    cost_total NUMERIC(12,2) NOT NULL DEFAULT 0 CHECK (cost_total >= 0), 
	deleted_at TIMESTAMP NULL
);

CREATE TABLE process_service (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	process_id INT NOT NULL REFERENCES processes(id),
	service_id INT NOT NULL REFERENCES services(id),
	cost_service NUMERIC(12,2) NOT NULL DEFAULT 0 CHECK (cost_service >= 0), 
	deleted_at TIMESTAMP NULL
);

CREATE TABLE process_worker (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	process_id INT NOT NULL REFERENCES processes(id),
	worker_id INT NOT NULL REFERENCES workers(id),
	cost_labor NUMERIC(12,2) NOT NULL DEFAULT 0 CHECK (cost_labor >= 0), 
	deleted_at TIMESTAMP NULL
);

CREATE TABLE wishlist (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id INT NOT NULL REFERENCES users(id),
	product_id INT NOT NULL REFERENCES products(id),
	deleted_at TIMESTAMP NULL
);

CREATE TABLE comments (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id INT NOT NULL REFERENCES users(id),
	content TEXT NOT NULL,
	parent_id INT NULL REFERENCES comments(id),
	deleted_at TIMESTAMP NULL
);

CREATE TABLE likes (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id INT NOT NULL REFERENCES users(id),
	comment_id INT NOT NULL REFERENCES comments(id),
	deleted_at TIMESTAMP NULL
);

CREATE TABLE ratings (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id INT NOT NULL REFERENCES users(id),
	product_id INT NOT NULL REFERENCES products(id),
	stars SMALLINT NOT NULL CHECK (stars > 0 AND stars < 6),
	deleted_at TIMESTAMP NULL
);

-- Insert de Materiel_units
INSERT INTO material_units (unit_name)
VALUES
('Metro'),
('Yarda'),
('Metro cubico'),
('Pie cuadrado'),
('Kilogramo'),
('Libra'),
('Litro'),
('Unidad');


-- Insert de departamentos
INSERT INTO departments (name, description, company_id)
VALUES
('Diseno', 'Departamento encargado de la creacion visual, diseno grafico y desarrollo de identidad corporativa.', 1),
('Ventas', 'Departamento responsable de la gestion de clientes y cierre de negocios.', 1),
('Marketing', 'Departamento orientado a la promocion, posicionamiento y publicidad de productos o servicios.', 1),
('Produccion', 'Departamento encargado de la elaboracion de bienes y servicios, controlando procesos y calidad.', 1),
('Recursos Humanos', 'Departamento responsable de la gestion de personal, contratacion, capacitacion y clima laboral.', 1),
('Finanzas', 'Departamento encargado de la planificacion, control y gestion financiera de la empresa.', 1);

